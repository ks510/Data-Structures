import java.util.NoSuchElementException;
import java.lang.IndexOutOfBoundsException;
/**
 * A sorted priority queue implemented as a singly linked list
 * @author Panchama
 * @version March 2017
 */
public class PriorityQueue
{
    private ListNode head;
    private int size;
    private static final int LOWEST_PRIORITY = Integer.MAX_VALUE;

    public PriorityQueue() {
        head = null;
        size = 0;
    }

    public void insert(int k, Object x) {
        boolean added = false;
        ListNode data = new ListNode(new Entry(k ,x), null);
        ListNode header = new ListNode(null, head);
        ListNode current = header;
        while (current.getNext() != null && !added) {
            Entry next = (Entry) current.getNext().getData();
            if (k <= next.getKey()) {
                added = true;
            } else {
                current = current.getNext();
            }
        }
        data.setNext(current.getNext());
        current.setNext(data);
        head = header.getNext();
        size++;
    }
    
    public Entry removeMin() {
        if (isEmpty()) {
            throw new NoSuchElementException("P. Queue is empty");
        }
        ListNode temp = head;
        head = temp.getNext();
        temp.setNext(null);
        size--;
        
        return (Entry) temp.getData();
    }
    
    public boolean isEmpty() {
        return size == 0;
    }

    public int size() {
        return size;
    }

}
